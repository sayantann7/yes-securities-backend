generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  fullname        String
  password        String
  role            String    @default("user")
  recentDocs      String[]
  updatedAt       DateTime  @default(now())
  createdAt       DateTime  @default(now())
  comments        Comment[]
  notifications   Notification[]
  bookmarks       Bookmark[]
  numberOfSignIns Int       @default(0)
  lastSignIn      DateTime? @default(now())
  timeSpent       Int       @default(0)
  documentsViewed Int       @default(0)
}

model Comment {
  id         String   @id @default(cuid())
  content    String
  userId     String
  documentId String
  updatedAt  DateTime @default(now())
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model Notification {
  id         String   @id @default(cuid())
  type       String   // 'comment', 'upload', 'ping', 'alert'
  title      String
  message    String
  read       Boolean  @default(false)
  userId     String
  documentId String?
  senderId   String?
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model Bookmark {
  id         String   @id @default(cuid())
  userId     String
  itemId     String   // Can be document ID or folder ID (S3 key)
  itemType   String   // 'document' or 'folder'
  itemName   String   // Name of the bookmarked item
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  
  @@unique([userId, itemId]) // Prevent duplicate bookmarks
}
